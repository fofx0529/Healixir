import { useState, useEffect } from "react";
import { Link, useNavigate } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { 
  ArrowLeft,
  User,
  FileText,
  Package,
  Calendar,
  ShoppingCart,
  Download,
  Eye,
  AlertTriangle,
  Settings
} from "lucide-react";

const Member = () => {
  const [user, setUser] = useState<any>(null);
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const navigate = useNavigate();

  useEffect(() => {
    // Ê™¢Êü•Áî®Êà∂ÁôªÂÖ•ÁãÄÊÖã
    const token = localStorage.getItem('token');
    const userData = localStorage.getItem('user');
    
    console.log("üîç Ê™¢Êü•Áî®Êà∂Ë≥áÊñô:", { token: !!token, userData });
    
    if (token && userData) {
      try {
        const parsedUser = JSON.parse(userData);
        console.log("üë§ Ëß£ÊûêÂæåÁöÑÁî®Êà∂Ë≥áÊñô:", parsedUser);
        setUser(parsedUser);
        setIsLoggedIn(true);
      } catch (error) {
        console.error('Error parsing user data:', error);
        setIsLoggedIn(false);
      }
    } else {
      setIsLoggedIn(false);
    }
    
    setIsLoading(false);
  }, []);

  // Ê®°Êì¨Ë©ï‰º∞Ë≥áÊñô
  const mockAssessments = [
    {
      id: 1,
      date: "2024-06-20",
      type: "ÁáüÈ§äÁõÆÊ®ôË©ï‰º∞",
      status: "Â∑≤ÂÆåÊàê",
      result: "ÂÄã‰∫∫ÂåñÁáüÈ§äÂª∫Ë≠∞Â∑≤ÁîüÊàê"
    },
    {
      id: 2,
      date: "2024-05-15",
      type: "ÁáüÈ§äÁõÆÊ®ôË©ï‰º∞",
      status: "Â∑≤ÂÆåÊàê",
      result: "ÂÄã‰∫∫ÂåñÁáüÈ§äÂª∫Ë≠∞Â∑≤ÁîüÊàê"
    }
  ];

  // Ê®°Êì¨Ë®ÇÂñÆË≥áÊñô
  const mockOrders = [
    {
      id: "ORD-2024-001",
      date: "2024-06-25",
      status: "Â∑≤ÁôºË≤®",
      total: "NT$ 2,580",
      items: ["Á∂≠‰ªñÂëΩD3ËÜ†Âõä x2", "Omega-3È≠öÊ≤π x1"]
    },
    {
      id: "ORD-2024-002",
      date: "2024-06-10",
      status: "Â∑≤ÂÆåÊàê",
      total: "NT$ 1,890",
      items: ["ÁõäÁîüËèåËÜ†Âõä x1", "Á∂≠‰ªñÂëΩBÁæ§ x1"]
    }
  ];

  // ‰∏ãËºâÂäüËÉΩ - Ê∑ªÂä†BOM‰ª•Á¢∫‰øùÊ≠£Á¢∫Á∑®Á¢º
  const downloadAssessmentSummary = (assessmentId: number) => {
    const reportContent = `ÂÅ•Â∫∑Ë©ï‰º∞ÊëòË¶ÅÂ†±Âëä
========================

Âü∫Êú¨Ë≥áË®ä
--------
Ë©ï‰º∞Á∑®ËôüÔºö${assessmentId}
Ë©ï‰º∞Êó•ÊúüÔºö2024-06-20
Ë©ï‰º∞È°ûÂûãÔºöÁáüÈ§äÁõÆÊ®ôË©ï‰º∞
ÁãÄÊÖãÔºöÂ∑≤ÂÆåÊàê
Áî®Êà∂ÂßìÂêçÔºö${user?.name || 'Êú™Áü•Áî®Êà∂'}
Áî®Êà∂‰ø°ÁÆ±Ôºö${user?.email || 'Êú™Ë®≠ÂÆö'}

Ë©ï‰º∞ÁµêÊûú
--------
‚úì ÂÄã‰∫∫ÂåñÁáüÈ§äÂª∫Ë≠∞Â∑≤ÁîüÊàê
‚úì Êï¥È´îÂÅ•Â∫∑Ë©ïÂàÜÔºö78/100

‰∏ªË¶ÅÂª∫Ë≠∞
--------
1. Â¢ûÂä†Á∂≠‰ªñÂëΩD3ÊîùÂèñ
2. Ë£úÂÖÖOmega-3ËÑÇËÇ™ÈÖ∏
3. Á∂≠ÊåÅÁõÆÂâçÁöÑÈà£Ë≥™ÊîùÂèñÈáè
4. Âª∫Ë≠∞Â¢ûÂä†ÁõäÁîüËèåË£úÂÖÖ

Ê≥®ÊÑè‰∫ãÈ†Ö
--------
‚Ä¢ Â¶ÇÈúÄË©≥Á¥∞Â†±ÂëäÔºåË´ãÈªûÊìä"Êü•Áúã"ÊåâÈàïÈÄ≤ÂÖ•ÂÆåÊï¥Ë©ï‰º∞È†ÅÈù¢
‚Ä¢ Âª∫Ë≠∞ÂÆöÊúüÈÄ≤Ë°åÂÅ•Â∫∑Ë©ï‰º∞‰ª•ËøΩËπ§ÊîπÂñÑÊÉÖÊ≥Å
‚Ä¢ Â¶ÇÊúâÁñëÂïèÂèØËÅØÁµ°ÂÆ¢ÊúçÊàñËó•Â∏´Ë´ÆË©¢

Â†±ÂëäÁîüÊàêË≥áË®ä
------------
ÁîüÊàêÊôÇÈñìÔºö${new Date().toLocaleString('zh-TW')}
ÁâàÊú¨Ôºö1.0
Á≥ªÁµ±ÔºöHealixir ÂÅ•Â∫∑ÁÆ°ÁêÜÂπ≥Âè∞

========================
¬© Healixir ÁâàÊ¨äÊâÄÊúâ`;

    try {
      // Ê∑ªÂä†UTF-8 BOM‰ª•Á¢∫‰øùÊ≠£Á¢∫Á∑®Á¢º
      const BOM = '\uFEFF';
      const contentWithBOM = BOM + reportContent;
      
      const blob = new Blob([contentWithBOM], { 
        type: 'text/plain;charset=utf-8' 
      });
      const url = URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `Healixir_ÂÅ•Â∫∑Ë©ï‰º∞Â†±Âëä_${user?.name || 'User'}_${assessmentId}_${new Date().toISOString().split('T')[0]}.txt`;
      
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      URL.revokeObjectURL(url);
      
      alert('üì• Ë©ï‰º∞Â†±Âëä‰∏ãËºâÊàêÂäüÔºÅË´ã‰ΩøÁî®Ë®ò‰∫ãÊú¨ÊàñÂÖ∂‰ªñÊñáÂ≠óÁ∑®ËºØÂô®ÈñãÂïüÊ™îÊ°à„ÄÇ');
    } catch (error) {
      console.error('‰∏ãËºâÂ§±Êïó:', error);
      alert('‚ùå ‰∏ãËºâÂ§±ÊïóÔºåË´ãÁ®çÂæåÂÜçË©¶');
    }
  };

  // PDFÁõ¥Êé•‰∏ãËºâÂäüËÉΩ - ËàáÂÅ•Â∫∑Ë©ï‰º∞Â†±ÂëäÁµÑ‰ª∂ÂÆåÂÖ®‰∏ÄËá¥
  const downloadAsPDF = async (assessmentId: number) => {
    try {
      // ÂãïÊÖãÂ∞éÂÖ•ÊâÄÈúÄÂ∫´
      const html2canvas = (await import('html2canvas')).default;
      const { jsPDF } = await import('jspdf');
      
      // ÂâµÂª∫Ëá®ÊôÇÁöÑHTMLÂÖßÂÆπ - Ë®≠ÂÆöÁÇ∫ A4 Â∞∫ÂØ∏
      const tempDiv = document.createElement('div');
      tempDiv.style.position = 'absolute';
      tempDiv.style.left = '-9999px';
      tempDiv.style.top = '0';
      tempDiv.style.width = '210mm'; // A4 ÂØ¨Â∫¶
      tempDiv.style.minHeight = '297mm'; // A4 È´òÂ∫¶
      tempDiv.style.backgroundColor = '#ffffff';
      tempDiv.style.fontFamily = '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif';
      tempDiv.style.fontSize = '12px';
      tempDiv.style.lineHeight = '1.5';
      tempDiv.style.color = '#000000';
      
      // ÂÅ•Â∫∑ÊåáÊ®ôÊï∏Êìö
      const healthMetrics = [
        { name: 'È£≤È£ü', score: 70, color: '#10b981', icon: 'üçé' },
        { name: '‰ΩúÊÅØ', score: 85, color: '#10b981', icon: '‚è∞' },
        { name: 'ÂøÉÁêÜ', score: 25, color: '#ef4444', icon: 'üß†' },
        { name: 'È´îË≥™', score: 58, color: '#eab308', icon: '‚ù§Ô∏è' },
        { name: 'ÈÅãÂãï', score: 9, color: '#ef4444', icon: 'üèÉ' }
      ];

      // Âª∫Ë≠∞Êï∏Êìö
      const recommendations = [
        {
          number: 1,
          title: 'È£≤È£üÊñπÈù¢ Âª∫Ë≠∞Ôºö',
          content: 'ÊÇ®ÁõÆÂâçÊúâ‰∏çÈåØÁöÑÈ£≤È£üÁøíÊÖ£ÔºåÂª∫Ë≠∞ÁπºÊåÅÁ∫å‰∏âÈ§êÂùáË°°È£≤È£üÔºåÂ§öÈáçË¶ñÂÖÖÂ§©ÁÑ∂Ëî¨ÊûúÊîùÂèñÁáüÈ§äÔºå‰∏¶ÈÅøÂÖçÈÅéÂ§öÁöÑÂø´È§êËàáÈ´òÊ≤πÂä†Â∑•È£üÂìÅ„ÄÇ'
        },
        {
          number: 2,
          title: 'ÂøÉÁêÜÊñπÈù¢ Âª∫Ë≠∞Ôºö',
          content: 'ÂøÉÁêÜÂ£ìÂäõËºÉÊïèÊÑüÔºåÂª∫Ë≠∞ÂÆöÊúüÈÄ≤Ë°åÊîæÈ¨ÜÁ∑¥ÁøíÔºåÂ¶ÇÂÜ•ÊÉ≥„ÄÅÊ∑±ÂëºÂê∏„ÄÅÂØ´Êó•Ë®òÔºåÊàñÂ∞ãÊâæËÆìÊÇ®ÊîæÂøÉ‰∫§ÊµÅÁöÑÊúãÂèã„ÄÅËã•Â£ìÂäõÊåÅÁ∫åÈÅéÈáçÔºå‰πüÂèØËÄÉÊÖÆÂ∞ãÊ±ÇÂ∞àÂøÉÁêÜË´ÆË©¢„ÄÇ'
        },
        {
          number: 3,
          title: '‰ΩúÊÅØÊñπÈù¢ Âª∫Ë≠∞Ôºö',
          content: '‰ΩúÊÅØÂÅ•Â∫∑Á®ãÂ∫¶ËâØÂ•ΩÔºåË´ãÁπºÊåÅÁèæÊúâÁöÑ‰ΩúÊÅØÊôÇÈñìÔºåÊØèÊôöÁõ°ÈáèÂÖÖË∂≥ÁöÑ7-9Â∞èÊôÇÁù°Áú†Ôºå‰∏¶Áõ°ÈáèÂú®Êôö‰∏ä11ÈªûÂâçÂÖ•Áù°ÔºåÂπ´Âä©Ë∫´È´î‰øÆÂæ©ÂíåÊñ∞Èô≥‰ª£Ë¨ù„ÄÇ'
        },
        {
          number: 4,
          title: 'È´îË≥™ÊñπÈù¢ Âª∫Ë≠∞Ôºö',
          content: 'Êï¥È´îÈ´îË≥™Á∂≠ÊåÅËâØÂ•ΩÔºåË´ãÁπºÁ∫åÊåÅÁ∫åÂùáË°°ÁöÑÁáüÈ§äÊîùÂèñËàáÈÅ©Â∫¶ÈÅãÂãïÔºåÂ¶ÇÊØèÈÄ±ÈÄ≤Ë°åËá≥Â∞ë3Ê¨°ÁöÑÊúâÊ∞ßÈÅãÂãïÔºåÊúâÂä©ÊñºÊèêÂçáÂÖçÁñ´ÂäõËàáË∫´È´îÊ©üËÉΩ„ÄÇ'
        },
        {
          number: 5,
          title: 'ÈÅãÂãïÊñπÈù¢ Âª∫Ë≠∞Ôºö',
          content: 'ÈÅãÂãïÈáèÊòéÈ°Ø‰∏çË∂≥ÔºåÂª∫Ë≠∞ÊØèÂ§©Ëá≥Â∞ë10-15ÂàÜÈêòÁöÑÂü∫Á§éÈÅãÂãïÈñãÂßãÔºåÈÄêÊ≠•Â¢ûÂä†Âº∑Â∫¶ÔºåÂèØ‰ª•ÈÅ∏ÊìáÂø´Ëµ∞„ÄÅÁëú‰ºΩ„ÄÅÂÅ•Ë∫´Á≠âÊÇ®ÂñúÊÑõÁöÑÈÅãÂãïÔºåÂæ™Â∫èÊº∏ÈÄ≤ÊèêÂçáË∫´È´îÂÅ•Â∫∑ÂíåÊ¥ªÂäõ„ÄÇ'
        }
      ];

      // ÁîüÊàêÂÅ•Â∫∑ÊåáÊ®ôÁöÑHTML
      const healthMetricsHTML = healthMetrics.map(metric => `
        <div style="display: flex; align-items: center; justify-content: space-between; padding: 16px 0; border-bottom: 1px solid #e5e7eb;">
          <div style="display: flex; align-items: center;">
            <div style="width: 40px; height: 40px; background: linear-gradient(to right, #3b82f6, #9333ea); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 12px;">
              <span style="font-size: 20px;">${metric.icon}</span>
            </div>
            <span style="color: #374151; font-weight: 500;">${metric.name}</span>
          </div>
          <div style="display: flex; align-items: center;">
            <div style="width: 128px; background: #e5e7eb; border-radius: 9999px; height: 12px; margin-right: 12px; overflow: hidden;">
              <div style="height: 100%; background: ${metric.color}; width: ${metric.score}%; border-radius: 9999px;"></div>
            </div>
            <span style="font-weight: bold; color: #1f2937; width: 32px; text-align: right;">${metric.score}</span>
          </div>
        </div>
      `).join('');

      // ÁîüÊàêÂª∫Ë≠∞ÁöÑHTML
      const recommendationsHTML = recommendations.map((rec, index) => `
        <div style="background: rgba(255, 255, 255, 0.8); border-radius: 16px; padding: 24px; margin-bottom: 16px; box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);">
          <div style="display: flex; align-items: flex-start;">
            <div style="background: linear-gradient(to right, #3b82f6, #9333ea); color: white; border-radius: 50%; width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold; margin-right: 16px; flex-shrink: 0;">
              ${rec.number}
            </div>
            <div>
              <h4 style="font-weight: bold; color: #1f2937; margin-bottom: 12px;">${rec.title}</h4>
              <p style="color: #4b5563; line-height: 1.6;">${rec.content}</p>
            </div>
          </div>
        </div>
      `).join('');
      
      tempDiv.innerHTML = `
        <div style="padding: 32px; background: linear-gradient(to bottom right, #dbeafe, #e9d5ff, #d1fae5); min-height: 100vh;">
          <!-- Â†±ÂëäÊ°ÜÊû∂ -->
          <div style="background: white; border-radius: 24px; box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1); overflow: hidden;">
            <!-- Â†±ÂëäÈ†≠ÈÉ® -->
            <div style="background: linear-gradient(to right, #2563eb, #9333ea); color: white; padding: 32px; text-align: center;">
              <div style="display: flex; align-items: center; justify-content: center; margin-bottom: 16px;">
                <div style="width: 64px; height: 64px; background: white; border-radius: 8px; padding: 8px; margin-right: 16px; display: flex; align-items: center; justify-content: center;">
                  <span style="font-size: 32px;">‚ù§Ô∏è</span>
                </div>
                <div style="text-align: left;">
                  <h1 style="font-size: 30px; font-weight: bold; margin: 0;">Healixir</h1>
                  <p style="color: #ddd6fe; margin: 0;">Êô∫ËÉΩ‰øùÂÅ•È°ßÂïè</p>
                </div>
              </div>
              <h2 style="font-size: 32px; font-weight: bold; margin-top: 24px;">ÂÅ•Â∫∑Ë©ï‰º∞Â†±Âëä</h2>
              <p style="color: #ddd6fe; margin-top: 8px;">Â†±ÂëäÁîüÊàêÊó•ÊúüÔºö${new Date().toLocaleDateString('zh-TW')}</p>
            </div>

            <!-- Â†±ÂëäÂÖßÂÆπ -->
            <div style="padding: 32px;">
              <!-- Âü∫Êú¨Ë≥áÊñôÂç°Áâá -->
              <div style="background: linear-gradient(to right, #dbeafe, #e9d5ff); border-radius: 16px; padding: 24px; margin-bottom: 32px; border: 1px solid #c7d2fe;">
                <h3 style="font-size: 18px; font-weight: bold; color: #1f2937; margin-bottom: 16px;">Âü∫Êú¨Ë≥áÊñô</h3>
                <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 24px; text-align: center;">
                  <div style="background: white; border-radius: 12px; padding: 16px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);">
                    <p style="color: #6b7280; font-size: 14px; margin-bottom: 4px;">Âπ¥ÈΩ°</p>
                    <p style="font-size: 24px; font-weight: bold; color: #2563eb;">28</p>
                    <p style="color: #6b7280; font-size: 14px;">Ê≠≤</p>
                  </div>
                  <div style="background: white; border-radius: 12px; padding: 16px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);">
                    <p style="color: #6b7280; font-size: 14px; margin-bottom: 4px;">Ë∫´È´ò</p>
                    <p style="font-size: 24px; font-weight: bold; color: #9333ea;">170</p>
                    <p style="color: #6b7280; font-size: 14px;">ÂÖ¨ÂàÜ</p>
                  </div>
                  <div style="background: white; border-radius: 12px; padding: 16px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);">
                    <p style="color: #6b7280; font-size: 14px; margin-bottom: 4px;">È´îÈáç</p>
                    <p style="font-size: 24px; font-weight: bold; color: #10b981;">61</p>
                    <p style="color: #6b7280; font-size: 14px;">ÂÖ¨Êñ§</p>
                  </div>
                </div>
              </div>

              <!-- ‰∏ªË¶ÅÂÖßÂÆπÁ∂≤Ê†º -->
              <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 32px;">
                <!-- Â∑¶ÂÅ¥ - ÂÅ•Â∫∑ÂàÜÊûê -->
                <div>
                  <!-- Á∂úÂêàÂàÜÊûêÁµêÊûú -->
                  <div style="background: #f9fafb; border-radius: 16px; padding: 24px; border: 1px solid #e5e7eb; margin-bottom: 24px;">
                    <div style="display: flex; justify-content: space-between; margin-bottom: 24px;">
                      <div>
                        <h3 style="font-size: 20px; font-weight: bold; color: #1f2937; display: flex; align-items: center; margin-bottom: 16px;">
                          <div style="width: 40px; height: 40px; background: linear-gradient(to right, #3b82f6, #9333ea); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 12px;">
                            <span style="color: white; font-size: 20px;">üìä</span>
                          </div>
                          Á∂úÂêàÂàÜÊûêÁµêÊûú
                        </h3>
                        <div style="font-size: 48px; font-weight: bold; background: linear-gradient(to right, #3b82f6, #9333ea); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">49ÂàÜ</div>
                      </div>
                      <div style="text-align: right;">
                        <div style="display: flex; align-items: center; color: #9333ea; margin-bottom: 8px;">
                          <span style="margin-right: 4px;">‚ù§Ô∏è</span>
                          <span style="font-weight: 600;">ÂÅ•Â∫∑ÂàÜÊûêË™™Êòé</span>
                        </div>
                        <p style="color: #6b7280; font-size: 14px; margin-bottom: 12px;">ÊÇ®ÁöÑÁ∂úÂêàÂÅ•Â∫∑ÂàÜÊï∏Ë∂ÖÈÅé</p>
                        <p style="font-size: 24px; font-weight: bold; color: #2563eb;">59% ÁöÑÂêåÈΩ°‰∫∫</p>
                      </div>
                    </div>
                    ${healthMetricsHTML}
                  </div>

                  <!-- BMI Âç°Áâá -->
                  <div style="background: linear-gradient(to right, #10b981, #3b82f6); border-radius: 16px; padding: 24px; color: white; margin-bottom: 24px;">
                    <div style="display: flex; justify-content: space-between; align-items: center;">
                      <div>
                        <p style="opacity: 0.9; margin-bottom: 4px;">ÊÇ®ÁöÑË∫´È´îË≥™ÈáèÊåáÊï∏ÁÇ∫</p>
                        <p style="font-size: 24px; font-weight: bold;">21.1 kg/m¬≤</p>
                        <p style="opacity: 0.9;">Â±¨ÊñºÊ≠£Â∏∏ÁØÑÂúç</p>
                      </div>
                      <div style="background: rgba(255, 255, 255, 0.9); border-radius: 12px; padding: 16px;">
                        <p style="color: #10b981; font-weight: bold; font-size: 18px;">BMI: 21.1</p>
                        <span style="color: #10b981; font-size: 14px; background: #d1fae5; padding: 4px 12px; border-radius: 9999px;">Ê≠£Â∏∏ÁØÑÂúç</span>
                      </div>
                    </div>
                  </div>

                  <!-- ÈúÄË¶ÅÊîπÂñÑÁöÑÈ†òÂüü -->
                  <div style="background: linear-gradient(to right, #f97316, #ef4444); border-radius: 16px; padding: 24px; color: white;">
                    <h4 style="font-weight: bold; font-size: 18px; margin-bottom: 8px; display: flex; align-items: center;">
                      <div style="width: 32px; height: 32px; background: rgba(255, 255, 255, 0.2); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin-right: 12px;">
                        <span>‚ö†Ô∏è</span>
                      </div>
                      ÈúÄË¶ÅÊîπÂñÑÁöÑÈ†òÂüü
                    </h4>
                    <p style="opacity: 0.9; margin-left: 44px;">ÂøÉÁêÜÂíåÈÅãÂãï ÊñπÈù¢ÈúÄË¶ÅÁâπÂà•ÈóúÊ≥®</p>
                  </div>
                </div>

                <!-- Âè≥ÂÅ¥ - Âª∫Ë≠∞ -->
                <div>
                  <h3 style="font-size: 24px; font-weight: bold; color: #1f2937; text-align: center; margin-bottom: 24px;">ÂÄã‰∫∫ÂåñÂÅ•Â∫∑Âª∫Ë≠∞</h3>
                  ${recommendationsHTML}
                </div>
              </div>

              <!-- Â†±ÂëäÂ∫ïÈÉ®Ë≥áË®ä -->
              <div style="margin-top: 48px; padding-top: 32px; border-top: 1px solid #e5e7eb; text-align: center; color: #6b7280; font-size: 14px;">
                <p>Êú¨Â†±ÂëäÁî± Healixir Êô∫ËÉΩÂÅ•Â∫∑Ë©ï‰º∞Á≥ªÁµ±ÁîüÊàê</p>
                <p style="margin-top: 8px;">Â¶ÇÊúâ‰ªª‰ΩïÁñëÂïèÔºåË´ãË´ÆË©¢Â∞àÊ•≠ÈÜ´ÁôÇ‰∫∫Âì°</p>
              </div>
            </div>
          </div>
        </div>
      `;
      
      // Ê∑ªÂä†Âà∞È†ÅÈù¢
      document.body.appendChild(tempDiv);
      
      // Á≠âÂæÖ‰∏Ä‰∏ãËÆìÊ®£ÂºèÊ∏≤Êüì
      await new Promise(resolve => setTimeout(resolve, 100));
      
      // ËΩâÊèõÁÇ∫canvas
      const canvas = await html2canvas(tempDiv, {
        scale: 2,
        useCORS: true,
        allowTaint: true,
        backgroundColor: '#f3f4f6',
        width: 1200,
        height: tempDiv.scrollHeight,
        logging: false
      });
      
      // ÁßªÈô§Ëá®ÊôÇÂÖÉÁ¥†
      document.body.removeChild(tempDiv);
      
      // ÂâµÂª∫PDF - A4Â§ßÂ∞è
      const pdf = new jsPDF('p', 'mm', 'a4');
      const pdfWidth = pdf.internal.pageSize.getWidth();
      const pdfHeight = pdf.internal.pageSize.getHeight();
      
      // Ë®àÁÆóÂúñÁâáÂú®PDF‰∏≠ÁöÑÂ∞∫ÂØ∏
      const imgWidth = canvas.width;
      const imgHeight = canvas.height;
      const ratio = Math.min(pdfWidth / imgWidth * 25.4 / 96, pdfHeight / imgHeight * 25.4 / 96);
      
      // Â∞ácanvasËΩâÁÇ∫ÂúñÁâá‰∏¶Ê∑ªÂä†Âà∞PDF
      const imgData = canvas.toDataURL('image/png');
      const finalWidth = imgWidth * ratio;
      const finalHeight = imgHeight * ratio;
      const x = (pdfWidth - finalWidth) / 2;
      const y = 0;
      
      // Â¶ÇÊûúÂÖßÂÆπË∂ÖÈÅé‰∏ÄÈ†ÅÔºåÈúÄË¶ÅÂàÜÈ†Å
      if (finalHeight > pdfHeight) {
        let position = 0;
        let pageHeight = imgHeight * pdfHeight / finalHeight;
        
        while (position < imgHeight) {
          const pageCanvas = document.createElement('canvas');
          pageCanvas.width = imgWidth;
          pageCanvas.height = Math.min(pageHeight, imgHeight - position);
          
          const pageCtx = pageCanvas.getContext('2d');
          pageCtx.drawImage(canvas, 0, -position);
          
          const pageData = pageCanvas.toDataURL('image/png');
          
          if (position > 0) {
            pdf.addPage();
          }
          
          pdf.addImage(pageData, 'PNG', x, y, finalWidth, pageCanvas.height * ratio);
          position += pageHeight;
        }
      } else {
        pdf.addImage(imgData, 'PNG', x, y, finalWidth, finalHeight);
      }
      
      // ‰∏ãËºâPDF
      pdf.save(`Healixir_ÂÅ•Â∫∑Ë©ï‰º∞Â†±Âëä_${user?.name || 'User'}_${assessmentId}_${new Date().toISOString().split('T')[0]}.pdf`);
      
      alert('üì• PDFÂ†±Âëä‰∏ãËºâÊàêÂäüÔºÅ');
    } catch (error) {
      console.error('PDFÁîüÊàêÂ§±Êïó:', error);
      alert('‚ùå PDFÁîüÊàêÂ§±ÊïóÔºåË´ãÁ¢∫‰øùÂ∑≤ÂÆâË£ù html2canvas Âíå jsPDF Â•ó‰ª∂');
    }
  };

  // Â¶ÇÊûúÊ≠£Âú®ËºâÂÖ•ÔºåÈ°ØÁ§∫ËºâÂÖ•ÁãÄÊÖã
  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-green-50 flex items-center justify-center">
        <div className="text-center">
          <div className="w-8 h-8 border-4 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
          <p className="text-gray-600">ËºâÂÖ•‰∏≠...</p>
        </div>
      </div>
    );
  }

  // Â¶ÇÊûúÊú™ÁôªÂÖ•ÔºåÈ°ØÁ§∫ÁôªÂÖ•ÊèêÁ§∫
  if (!isLoggedIn) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-green-50">
        <header className="bg-white/80 backdrop-blur-sm shadow-sm border-b">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center h-16">
              <div className="flex items-center">
                <Link to="/" className="inline-flex items-center text-blue-600 hover:text-blue-800">
                  <ArrowLeft className="w-4 h-4 mr-2" />
                  ËøîÂõûÈ¶ñÈ†Å
                </Link>
              </div>
            </div>
          </div>
        </header>

        <main className="max-w-2xl mx-auto px-4 py-16">
          <Card className="border-yellow-200 bg-yellow-50/80 backdrop-blur-sm">
            <CardContent className="p-8 text-center">
              <AlertTriangle className="w-16 h-16 text-yellow-600 mx-auto mb-4" />
              <h2 className="text-2xl font-bold text-gray-800 mb-2">ÈúÄË¶ÅÁôªÂÖ•ÊâçËÉΩË®™ÂïèÊúÉÂì°‰∏≠ÂøÉ</h2>
              <p className="text-gray-600 mb-6">
                Ë´ãÂÖàÁôªÂÖ•ÊÇ®ÁöÑÂ∏≥Êà∂‰ª•Êü•ÁúãÂÄã‰∫∫Ë≥áÊñô„ÄÅË©ï‰º∞Á¥ÄÈåÑÂíåË®ÇÂñÆË≥áË®ä
              </p>
              <div className="space-x-4">
                <Link to="/login">
                  <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 shadow-lg">
                    Á´ãÂç≥ÁôªÂÖ•
                  </Button>
                </Link>
                <Link to="/register">
                  <Button variant="outline" className="border-purple-200 hover:bg-purple-50">
                    Ë®ªÂÜäÊñ∞Â∏≥Êà∂
                  </Button>
                </Link>
              </div>
            </CardContent>
          </Card>
        </main>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-purple-50 to-green-50">
      {/* È†ÇÈÉ®Â∞éËà™ - Â∑≤ÁßªÈô§Logo */}
      <header className="bg-white/80 backdrop-blur-sm shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center">
              <Link to="/" className="inline-flex items-center text-blue-600 hover:text-blue-800">
                <ArrowLeft className="w-4 h-4 mr-2" />
                ËøîÂõûÈ¶ñÈ†Å
              </Link>
            </div>
            <div className="flex items-center space-x-4">
              <span className="text-gray-700">
                Ê≠°ËøéÔºå<span className="font-medium text-purple-600">{user?.name || 'ÊúÉÂì°'}</span>
              </span>
            </div>
          </div>
        </div>
      </header>

      {/* ‰∏ªË¶ÅÂÖßÂÆπ */}
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-800 mb-2">ÊúÉÂì°‰∏≠ÂøÉ</h1>
          <p className="text-gray-600">ÁÆ°ÁêÜÊÇ®ÁöÑÂÅ•Â∫∑Ë©ï‰º∞Á¥ÄÈåÑÂíåË®ÇÂñÆË≥áË®ä</p>
        </div>

        <Tabs defaultValue="profile" className="w-full">
          <TabsList className="grid w-full grid-cols-3 mb-8 bg-white/80 backdrop-blur-sm">
            <TabsTrigger value="profile" className="flex items-center">
              <User className="w-4 h-4 mr-2" />
              ÂÄã‰∫∫Ë≥áÊñô
            </TabsTrigger>
            <TabsTrigger value="orders" className="flex items-center">
              <Package className="w-4 h-4 mr-2" />
              Ë®ÇÂñÆË≥áË®ä
            </TabsTrigger>
            <TabsTrigger value="assessments" className="flex items-center">
              <FileText className="w-4 h-4 mr-2" />
              Ê≠∑Âè≤Ë©ï‰º∞
            </TabsTrigger>
          </TabsList>

          <TabsContent value="profile" className="space-y-6">
            <Card className="bg-white/80 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <User className="w-5 h-5 mr-2" />
                  Âü∫Êú¨Ë≥áÊñô
                </CardTitle>
                <CardDescription>ÁÆ°ÁêÜÊÇ®ÁöÑÂ∏≥Êà∂Ë≥áË®äÂíåÂÅèÂ•ΩË®≠ÂÆö</CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">ÂßìÂêç</label>
                    <div className="w-full px-3 py-2 border border-gray-300 rounded-md bg-white/60">
                      {user?.name || 'Êú™Ë®≠ÂÆö'}
                    </div>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">ÈõªÂ≠êÈÉµ‰ª∂</label>
                    <div className="w-full px-3 py-2 border border-gray-300 rounded-md bg-white/60">
                      {user?.email || 'Êú™Ë®≠ÂÆö'}
                    </div>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">ÁîüÊó•</label>
                    <div className="w-full px-3 py-2 border border-gray-300 rounded-md bg-white/60">
                      {user?.birth_date || 'Êú™Ë®≠ÂÆö'}
                    </div>
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">ÈõªË©±ËôüÁ¢º</label>
                    <div className="w-full px-3 py-2 border border-gray-300 rounded-md bg-yellow-50/80 text-yellow-800">
                      {user?.phone || 'Â∞öÊú™Ë®≠ÂÆöÈõªË©±ËôüÁ¢º'}
                    </div>
                  </div>
                </div>
                
                <div className="flex space-x-4">
                  <Link to="/member/edit">
                    <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 shadow-lg">
                      <Settings className="w-4 h-4 mr-2" />
                      Á∑®ËºØË≥áÊñô
                    </Button>
                  </Link>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="orders" className="space-y-6">
            <Card className="bg-white/80 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <Package className="w-5 h-5 mr-2" />
                  Ë®ÇÂñÆË≥áË®ä
                </CardTitle>
                <CardDescription>
                  Êü•ÁúãÊÇ®ÁöÑË≥ºË≤∑Á¥ÄÈåÑÂíåË®ÇÂñÆÁãÄÊÖã
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {mockOrders.map((order) => (
                    <Link key={order.id} to={`/nutrition/order/${order.id}`}>
                      <div className="flex items-center justify-between p-4 border rounded-lg bg-white/60 hover:bg-white/80 transition-colors cursor-pointer">
                        <div className="flex items-center">
                          <Package className="w-5 h-5 text-purple-600 mr-4" />
                          <div>
                            <div className="flex items-center mb-2">
                              <span className="font-medium text-gray-800">Ë®ÇÂñÆËôüÁ¢º: {order.id}</span>
                              <span className={`ml-4 px-2 py-1 text-xs rounded-full ${
                                order.status === 'Â∑≤ÂÆåÊàê' 
                                  ? 'bg-green-100 text-green-800' 
                                  : 'bg-blue-100 text-blue-800'
                              }`}>
                                {order.status}
                              </span>
                            </div>
                            <div className="flex items-center mb-2">
                              <Calendar className="w-4 h-4 mr-2 text-gray-500" />
                              <span className="text-sm text-gray-500">{order.date}</span>
                            </div>
                            <div className="mb-2">
                              <p className="text-sm text-gray-600">ÂïÜÂìÅÔºö</p>
                              <p className="text-sm text-gray-700 ml-4">{order.items.join(", ")}</p>
                            </div>
                            <p className="font-medium text-purple-600">{order.total}</p>
                          </div>
                        </div>
                      </div>
                    </Link>
                  ))}
                </div>
                <div className="mt-6 text-center">
                  <Link to="/cart">
                    <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 shadow-lg">
                      <ShoppingCart className="w-4 h-4 mr-2" />
                      ÂâçÂæÄË≥ºÁâ©Ëªä
                    </Button>
                  </Link>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="assessments" className="space-y-6">
            <Card className="bg-white/80 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="flex items-center">
                  <FileText className="w-5 h-5 mr-2" />
                  ÂÅ•Â∫∑Ë©ï‰º∞Á¥ÄÈåÑ
                </CardTitle>
                <CardDescription>
                  Êü•ÁúãÊÇ®ÁöÑÂÅ•Â∫∑Ë©ï‰º∞Ê≠∑Âè≤Á¥ÄÈåÑÂíåÂª∫Ë≠∞Â†±Âëä
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {mockAssessments.map((assessment) => (
                    <Link key={assessment.id} to={`/nutrition/assessment/${assessment.id}`}>
                      <div className="flex items-center justify-between p-4 border rounded-lg bg-white/60 hover:bg-white/80 transition-colors cursor-pointer">
                        <div className="flex items-center">
                          <FileText className="w-5 h-5 text-blue-600 mr-4" />
                          <div>
                            <div className="flex items-center mb-2">
                              <Calendar className="w-4 h-4 mr-2 text-gray-500" />
                              <span className="text-sm text-gray-500">{assessment.date}</span>
                              <span className="ml-4 px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full">
                                {assessment.status}
                              </span>
                            </div>
                            <h3 className="font-medium text-gray-800 mb-1">{assessment.type}</h3>
                            <p className="text-sm text-gray-600">{assessment.result}</p>
                          </div>
                        </div>
                      </div>
                    </Link>
                  ))}
                </div>
                <div className="mt-6 text-center">
  				<Link to="/nutrition/personal-info">
    					<Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 shadow-lg">
      					<FileText className="w-4 h-4 mr-2" />
     						ÈÄ≤Ë°åÊñ∞ÁöÑË©ï‰º∞
    					</Button>
  				</Link>
			</div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </main>
    </div>
  );
};

export default Member;